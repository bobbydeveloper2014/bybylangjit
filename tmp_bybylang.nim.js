/* Generated by the Nim Compiler v2.2.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
var NNI33555836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555836.node = NNI33555836;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555173.base = NTI33555171;
NTI134217746.base = NTI33555173;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557330 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2878(ti_p2))) {
      result_33557330 = src_p1;
      }
      else {
        result_33557330 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557330 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557330 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557330 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557330 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557330, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557330 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557330 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557330 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557330[i] = nimCopy(result_33557330[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557330 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557330 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557330[i] = nimCopy(result_33557330[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557330 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557330 = src_p1;
      break;
    }

  return result_33557330;

}

function isObj(obj_p0, subclass_p1) {
  var result_33557443 = false;

  BeforeRet: {
    var x_33557444 = obj_p0;
    if ((x_33557444 == subclass_p1)) {
    result_33557443 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557444 == subclass_p1))) break Label2;
          if ((x_33557444 == null)) {
          result_33557443 = false;
          break BeforeRet;
          }
          
          x_33557444 = x_33557444.base;
        }
    };
    result_33557443 = true;
    break BeforeRet;
  };

  return result_33557443;

}

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2180(), NTI33554449);
    throw e_p0;

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557370 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557370 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557370;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557365 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557365 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557365;

}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_p0) {
  var result_33556919 = null;

    var res_33556973 = newSeq__system_u2516((s_p0).length);
    var i_33556974 = 0;
    var j_33556975 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556974 < (s_p0).length)) break Label2;
          var c_33556976 = s_p0[i_33556974];
          if ((c_33556976 < 128)) {
          res_33556973[j_33556975] = String.fromCharCode(c_33556976);
          i_33556974 += 1;
          }
          else {
            var helper_33557002 = newSeq__system_u2516(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33557003 = c_33556976.toString(16);
                  if ((((code_33557003) == null ? 0 : (code_33557003).length) == 1)) {
                  helper_33557002.push("%0");;
                  }
                  else {
                  helper_33557002.push("%");;
                  }
                  
                  helper_33557002.push(code_33557003);;
                  i_33556974 += 1;
                  if ((((s_p0).length <= i_33556974) || (s_p0[i_33556974] < 128))) {
                  break Label3;
                  }
                  
                  c_33556976 = s_p0[i_33556974];
                }
            };
++excHandler;
            try {
            res_33556973[j_33556975] = decodeURIComponent(helper_33557002.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            raiseDefect();
            res_33556973[j_33556975] = helper_33557002.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556975 += 1;
        }
    };
    if (res_33556973.length < j_33556975) { for (var i = res_33556973.length ; i < j_33556975 ; ++i) res_33556973.push(null); }
               else { res_33556973.length = j_33556975; };
    result_33556919 = res_33556973.join("");

  return result_33556919;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr([48, 57]);

function divInt64(a_p0, b_p1) {
        if (b_p1 == 0n) raiseDivByZero();
    if (b_p1 == -1n && a_p0 == 9223372036854775807n) raiseOverflow();
    return a_p0 / b_p1;
  

  
}

function nimMax(a_p0, b_p1) {
    var Temporary1;

  var result_33557157 = 0;

  BeforeRet: {
    if ((b_p1 <= a_p0)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557157 = Temporary1;
    break BeforeRet;
  };

  return result_33557157;

}

function nimMin(a_p0, b_p1) {
    var Temporary1;

  var result_33557153 = 0;

  BeforeRet: {
    if ((a_p0 <= b_p1)) {
    Temporary1 = a_p0;
    }
    else {
    Temporary1 = b_p1;
    }
    
    result_33557153 = Temporary1;
    break BeforeRet;
  };

  return result_33557153;

}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_p0, b_p1) {
        if (a_p0 == b_p1) return true;
    if (a_p0 === null && b_p1.length == 0) return true;
    if (b_p1 === null && a_p0.length == 0) return true;
    if ((!a_p0) || (!b_p1)) return false;
    var alen = a_p0.length;
    if (alen != b_p1.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_p0[i] != b_p1[i]) return false;
    return true;
  

  
}
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isFatPointer__system_u2878(ti_p0) {
  var result_33557312 = false;

  BeforeRet: {
    result_33557312 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557312;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function newSeq__system_u2516(len_p0) {
  var result_33556952 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 651;
    F.filename = "system.nim";
    result_33556952 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556952[i] = null; }  framePtr = F.prev;

  return result_33556952;

}

function isNimException__system_u2017() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556452 = null;

    if (isNimException__system_u2017()) {
    result_33556452 = lastJSError;
    }
    

  return result_33556452;

}

function add__system_u1942(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u14(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u14(a_p1),[32,46,46,32],HEX24__systemZdollars_u14(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536871115 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_536871115 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536871115;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536871115 = addInt(i_536871115, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u14(xHEX60gensym0_p0) {
  var result_369098768 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "dollars.nim";
    result_369098768[0] = nimCopy(null, [], NTI33554449);
    F.line = 21;
    addInt__stdZprivateZdigitsutils_u241(result_369098768, 0, xHEX60gensym0_p0);
  framePtr = F.prev;

  return result_369098768[0];

}

function auxWriteStackTrace__system_u2084(f_p0) {
  var result_33556518 = [[]];

    var it_33556526 = f_p0;
    var i_33556527 = 0;
    var total_33556528 = 0;
    var tempFrames_33556529 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555836);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556526 == null)) && (i_33556527 <= 63))) break Label2;
          tempFrames_33556529[i_33556527].Field0 = it_33556526.procname;
          tempFrames_33556529[i_33556527].Field1 = it_33556526.line;
          tempFrames_33556529[i_33556527].Field2 = it_33556526.filename;
          i_33556527 += 1;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556526 == null))) break Label4;
          total_33556528 += 1;
          it_33556526 = it_33556526.prev;
        }
    };
    result_33556518[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556528 == i_33556527))) {
    result_33556518[0].push.apply(result_33556518[0], [40]);;
    result_33556518[0].push.apply(result_33556518[0], HEX24__systemZdollars_u14((total_33556528 - i_33556527)));;
    result_33556518[0].push.apply(result_33556518[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556562 = 0;
      var colontmp__536871107 = 0;
      colontmp__536871107 = (i_33556527 - 1);
      var res_536871109 = colontmp__536871107;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536871109)) break Label7;
            j_33556562 = res_536871109;
            result_33556518[0].push.apply(result_33556518[0], cstrToNimstr(tempFrames_33556529[j_33556562].Field2));;
            if ((0 < tempFrames_33556529[j_33556562].Field1)) {
            result_33556518[0].push.apply(result_33556518[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, tempFrames_33556529[j_33556562].Field1);
            if (false) {
            result_33556518[0].push.apply(result_33556518[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556518, 0, 0);
            }
            
            result_33556518[0].push.apply(result_33556518[0], [41]);;
            }
            
            result_33556518[0].push.apply(result_33556518[0], [32,97,116,32]);;
            add__system_u1942(result_33556518, 0, tempFrames_33556529[j_33556562].Field0);
            result_33556518[0].push.apply(result_33556518[0], [10]);;
            res_536871109 -= 1;
          }
      };
    };

  return result_33556518[0];

}

function rawWriteStackTrace__system_u2180() {
  var result_33556613 = [];

    if (!((framePtr == null))) {
    result_33556613 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2084(framePtr)), NTI33554449);
    }
    else {
      result_33556613 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556613;

}

function unhandledException(e_p0) {
    var buf_33556658 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556658[0].push.apply(buf_33556658[0], e_p0.message);;
    }
    else {
    buf_33556658[0].push.apply(buf_33556658[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556658[0].push.apply(buf_33556658[0], [32,91]);;
    add__system_u1942(buf_33556658, 0, e_p0.name);
    buf_33556658[0].push.apply(buf_33556658[0], [93,10]);;
    buf_33556658[0].push.apply(buf_33556658[0], rawWriteStackTrace__system_u2180());;
    var cbuf_33556659 = toJSStr(buf_33556658[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556659);
  }
  else {
    throw cbuf_33556659;
  }
  

  
}

function raiseDefect() {
    if (isNimException__system_u2017()) {
    var e_33556664 = getCurrentException();
    if (isObj(e_33556664.m_type, NTI33555172)) {
    if ((excHandler == 0)) {
    unhandledException(e_33556664);
    }
    
    e_33556664.trace = nimCopy(null, rawWriteStackTrace__system_u2180(), NTI33554449);
    throw e_33556664;
    }
    
    }
    

  
}

function apuTran__tmp95bybylang_u32(name_p0, payload_p1) {
  var F = {procname: "tmp_bybylang.apuTran", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "tmp_bybylang.nim";
    var Temporary1 = nimCopy(null, payload_p1, NTI33554449);
    BUS_536870921[0].push(Temporary1);;
    F.line = 15;
    rawEcho([91,65,80,85,45,84,82,65,78,93,32], name_p0, [32,45,62,32], payload_p1);
  framePtr = F.prev;

  
}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError__pureZparseutils_u325() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt__pureZparseutils_u363(s_p0, b_p1, b_p1_Idx) {
      var Temporary1;
          var Temporary4;

  var result_704643438 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 437;
    F.filename = "parseutils.nim";
    var sign_704643439 = (-1n);
    F.line = 438;
    var i_704643440 = 0;
    if ((i_704643440 < (s_p0).length)) {
    if ((s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)] == 43)) {
    F.line = 440;
    i_704643440 += 1;
    }
    else {
    if ((s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)] == 45)) {
    F.line = 442;
    i_704643440 += 1;
    F.line = 443;
    sign_704643439 = 1n;
    }
    }
    }
    
      if (!(i_704643440 < (s_p0).length)) Temporary1 = false; else {        Temporary1 = (ConstSet2[s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 445;
    b_p1[b_p1_Idx] = 0n;
    Label2: {
      F.line = 446;
        Label3: while (true) {
          if (!(i_704643440 < (s_p0).length)) Temporary4 = false; else {            Temporary4 = (ConstSet3[s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 447;
          var c_704643474 = (s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_704643474)) / 10n <= b_p1[b_p1_Idx])) {
          F.line = 449;
          b_p1[b_p1_Idx] = ((b_p1[b_p1_Idx] * 10n) - BigInt(c_704643474));
          }
          else {
            F.line = 451;
          integerOutOfRangeError__pureZparseutils_u325();
          }
          
          F.line = 452;
          i_704643440 += 1;
          Label5: {
            F.line = 453;
              Label6: while (true) {
              if (!((i_704643440 < (s_p0).length) && (s_p0[chckIndx(i_704643440, 0, (s_p0).length - 1)] == 95))) break Label6;
                F.line = 453;
                i_704643440 += 1;
              }
          };
        }
    };
    if (((sign_704643439 == (-1n)) && (b_p1[b_p1_Idx] == (-9223372036854775808n)))) {
    F.line = 455;
    integerOutOfRangeError__pureZparseutils_u325();
    }
    else {
      F.line = 457;
      b_p1[b_p1_Idx] = (b_p1[b_p1_Idx] * sign_704643439);
      F.line = 458;
      result_704643438 = i_704643440;
    }
    
    }
    else {
      F.line = 460;
      result_704643438 = 0;
    }
    
  framePtr = F.prev;

  return result_704643438;

}

function npuParseBiggestInt(s_p0, number_p1, number_p1_Idx) {
  var result_704643499 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 476;
    F.filename = "parseutils.nim";
    var res_704643500 = [0n];
    F.line = 479;
    result_704643499 = rawParseInt__pureZparseutils_u363(s_p0, res_704643500, 0);
    if (!((result_704643499 == 0))) {
    F.line = 481;
    number_p1[number_p1_Idx] = res_704643500[0];
    }
    
  framePtr = F.prev;

  return result_704643499;

}

function npuParseInt(s_p0, number_p1, number_p1_Idx) {
  var result_704643504 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 492;
    F.filename = "parseutils.nim";
    var res_704643505 = [0n];
    F.line = 493;
    result_704643504 = npuParseBiggestInt(s_p0, res_704643505, 0);
    if (((res_704643505[0] < (-2147483648n)) || (2147483647n < res_704643505[0]))) {
    F.line = 496;
    integerOutOfRangeError__pureZparseutils_u325();
    }
    
    if (!((result_704643504 == 0))) {
    F.line = 498;
    number_p1[number_p1_Idx] = chckRange(Number(res_704643505[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_704643504;

}

function parseInt__pureZparseutils_u951(s_p0, number_p1, number_p1_Idx, start_p2) {
  var result_704644027 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1019;
    F.filename = "parseutils.nim";
    result_704644027 = npuParseInt((s_p0.slice(start_p2, (s_p0).length - 1 + 1)), number_p1, number_p1_Idx);
  framePtr = F.prev;

  return result_704644027;

}

function nsuParseInt(s_p0) {
  var result_671089498 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1156;
    F.filename = "strutils.nim";
    result_671089498[0] = 0;
    F.line = 1157;
    var L_671089499 = parseInt__pureZparseutils_u951(s_p0, result_671089498, 0, 0);
    if ((!((L_671089499 == (s_p0).length)) || (L_671089499 == 0))) {
    F.line = 1159;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32]).concat(s_p0), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_671089498[0];

}

function nsuFindChar(s_p0, sub_p1, start_p2, last_p3) {
    var Temporary1;

  var result_671090343 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1971;
    F.filename = "strutils.nim";
    result_671090343 = (-1);
    F.line = 1972;
    if ((last_p3 < 0)) {
    Temporary1 = (s_p0).length - 1;
    }
    else {
    Temporary1 = last_p3;
    }
    
    var last_671090344 = Temporary1;
    Label2: {
      F.line = 1975;
      var iHEX60gensym174_671090358 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__536871126 = 0;
      F.line = 1975;
      F.filename = "strutils.nim";
      colontmp__536871126 = start_p2;
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_536871127 = colontmp__536871126;
      Label3: {
        F.line = 97;
          Label4: while (true) {
          if (!(res_536871127 <= last_671090344)) break Label4;
            F.line = 1989;
            F.filename = "strutils.nim";
            iHEX60gensym174_671090358 = res_536871127;
            if ((s_p0[chckIndx(iHEX60gensym174_671090358, 0, (s_p0).length - 1)] == sub_p1)) {
            F.line = 1977;
            result_671090343 = iHEX60gensym174_671090358;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_536871127 = addInt(res_536871127, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_671090343;

}

function substr__system_u3709(s_p0, first_p1, last_p2) {
  var result_33558145 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2834;
    F.filename = "system.nim";
    var first_33558146 = nimMax(first_p1, 0);
    F.line = 2835;
    var last_33558147 = nimMin(last_p2, (s_p0).length - 1);
    F.line = 2836;
    var L_33558148 = nimMax(addInt(subInt(last_33558147, first_33558146), 1), 0);
    F.line = 2837;
    result_33558145 = nimCopy(null, mnewString(chckRange(L_33558148, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2842;
      var i_33558153 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536871130 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_536871130 < L_33558148)) break Label3;
            F.line = 2842;
            F.filename = "system.nim";
            i_33558153 = i_536871130;
            F.line = 2843;
            result_33558145[chckIndx(i_33558153, 0, (result_33558145).length - 1)] = s_p0[chckIndx(addInt(i_33558153, first_33558146), 0, (s_p0).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536871130 = addInt(i_536871130, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558145;

}

function substr__system_u3722(s_p0, first_p1) {
  var result_33558157 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2846;
    F.filename = "system.nim";
    result_33558157 = nimCopy(null, substr__system_u3709(s_p0, first_p1, (s_p0).length - 1), NTI33554449);
  framePtr = F.prev;

  return result_33558157;

}

function fill__pureZstrutils_u1622(a_p0, value_p1) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "algorithm.nim";
    var xHEX60gensym170_671090271 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym170_671090271 <= (a_p0).length - 1)) break Label2;
          F.line = 98;
          a_p0[chckIndx(xHEX60gensym170_671090271, 0, (a_p0).length - 1)] = value_p1;
          F.line = 75;
          xHEX60gensym170_671090271 = addInt(xHEX60gensym170_671090271, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_p0, sub_p1) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1904;
    F.filename = "strutils.nim";
    var m_671090261 = (sub_p1).length;
    F.line = 1905;
    fill__pureZstrutils_u1622(a_p0, m_671090261);
    Label1: {
      F.line = 1907;
      var i_671090281 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__536871133 = 0;
      F.line = 1907;
      F.filename = "strutils.nim";
      colontmp__536871133 = subInt(m_671090261, 1);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536871134 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_536871134 < colontmp__536871133)) break Label3;
            F.line = 1907;
            F.filename = "strutils.nim";
            i_671090281 = i_536871134;
            F.line = 1908;
            a_p0[chckIndx(sub_p1[chckIndx(i_671090281, 0, (sub_p1).length - 1)], 0, (a_p0).length - 1)] = subInt(subInt(m_671090261, 1), i_671090281);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536871134 = addInt(i_536871134, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_p0) {
  var result_671090315 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1917;
    F.filename = "strutils.nim";
    nsuInitSkipTable(result_671090315[0], sub_p0);
  framePtr = F.prev;

  return result_671090315[0];

}

function nsuFindStrA(a_p0, s_p1, sub_p2, start_p3, last_p4) {
    var Temporary1;

  var result_671090322 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1931;
    F.filename = "strutils.nim";
    if ((last_p4 < 0)) {
    Temporary1 = (s_p1).length - 1;
    }
    else {
    Temporary1 = last_p4;
    }
    
    var last_671090323 = Temporary1;
    F.line = 1932;
    var subLast_671090324 = subInt((sub_p2).length, 1);
    if ((subLast_671090324 == (-1))) {
    F.line = 1937;
    result_671090322 = start_p3;
    break BeforeRet;
    }
    
    F.line = 1941;
    result_671090322 = (-1);
    F.line = 1942;
    var skip_671090325 = start_p3;
    Label2: {
      F.line = 1944;
        Label3: while (true) {
        if (!(subLast_671090324 <= subInt(last_671090323, skip_671090325))) break Label3;
          F.line = 1945;
          var i_671090326 = subLast_671090324;
          Label4: {
            F.line = 1946;
              Label5: while (true) {
              if (!(s_p1[chckIndx(addInt(skip_671090325, i_671090326), 0, (s_p1).length - 1)] == sub_p2[chckIndx(i_671090326, 0, (sub_p2).length - 1)])) break Label5;
                if ((i_671090326 == 0)) {
                F.line = 1948;
                result_671090322 = skip_671090325;
                break BeforeRet;
                }
                
                F.line = 1949;
                i_671090326 = subInt(i_671090326, 1);
              }
          };
          F.line = 1950;
          skip_671090325 = addInt(skip_671090325, a_p0[chckIndx(s_p1[chckIndx(addInt(skip_671090325, subLast_671090324), 0, (s_p1).length - 1)], 0, (a_p0).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_671090322;

}

function nsuReplaceStr(s_p0, sub_p1, by_p2) {
  var result_671090530 = [];

  var F = {procname: "strutils.replace", prev: framePtr, filename: "/Users/macos/.choosenim/toolchains/nim-2.2.4/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2207;
    F.filename = "strutils.nim";
    result_671090530 = nimCopy(null, [], NTI33554449);
    F.line = 2208;
    var subLen_671090531 = (sub_p1).length;
    if ((subLen_671090531 == 0)) {
    F.line = 2210;
    result_671090530 = nimCopy(null, s_p0, NTI33554449);
    }
    else {
    if ((subLen_671090531 == 1)) {
    F.line = 2214;
    var c_671090532 = sub_p1[chckIndx(0, 0, (sub_p1).length - 1)];
    F.line = 2215;
    var last_671090533 = (s_p0).length - 1;
    F.line = 2216;
    var i_671090534 = 0;
    Label1: {
      F.line = 2217;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 2218;
          var j_671090535 = nsuFindChar(s_p0, c_671090532, chckRange(i_671090534, 0, 2147483647), last_671090533);
          if ((j_671090535 < 0)) {
          F.line = 2219;
          break Label1;
          }
          
          F.line = 2220;
          result_671090530.push.apply(result_671090530, substr__system_u3709(s_p0, i_671090534, subInt(j_671090535, 1)));;
          F.line = 2221;
          result_671090530.push.apply(result_671090530, by_p2);;
          F.line = 2222;
          i_671090534 = addInt(j_671090535, subLen_671090531);
        }
    };
    F.line = 2224;
    result_671090530.push.apply(result_671090530, substr__system_u3722(s_p0, i_671090534));;
    }
    else {
      F.line = 2226;
      var a_671090536 = nsuInitNewSkipTable(sub_p1);
      F.line = 2227;
      var last_671090537 = (s_p0).length - 1;
      F.line = 2228;
      var i_671090538 = 0;
      Label3: {
        F.line = 2229;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 2230;
            var j_671090539 = nsuFindStrA(a_671090536, s_p0, sub_p1, chckRange(i_671090538, 0, 2147483647), last_671090537);
            if ((j_671090539 < 0)) {
            F.line = 2231;
            break Label3;
            }
            
            F.line = 2232;
            result_671090530.push.apply(result_671090530, substr__system_u3709(s_p0, i_671090538, subInt(j_671090539, 1)));;
            F.line = 2233;
            result_671090530.push.apply(result_671090530, by_p2);;
            F.line = 2234;
            i_671090538 = addInt(j_671090539, subLen_671090531);
          }
      };
      F.line = 2236;
      result_671090530.push.apply(result_671090530, substr__system_u3722(s_p0, i_671090538));;
    }
    }
  framePtr = F.prev;

  return result_671090530;

}

function apuMem__tmp95bybylang_u55(action_p0, target_p1, value_p2) {
  var F = {procname: "tmp_bybylang.apuMem", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "tmp_bybylang.nim";
    var ramAddr_536870971 = nsuParseInt(nsuReplaceStr(target_p1, [82,65,77], []));
    if (eqStrings(action_p0, [119,114,105,116,101])) {
    F.line = 20;
    RAM_536870916[0][chckIndx(ramAddr_536870971, 0, (RAM_536870916[0]).length - 1)] = nsuParseInt(value_p2);
    }
    else {
    if (eqStrings(action_p0, [114,101,97,100])) {
    F.line = 22;
    rawEcho([91,65,80,85,45,77,69,77,93,32,82,65,77,91], HEX24__systemZdollars_u14(ramAddr_536870971), [93,32,45,62,32], HEX24__systemZdollars_u14(RAM_536870916[0][chckIndx(ramAddr_536870971, 0, (RAM_536870916[0]).length - 1)]));
    }
    }
  framePtr = F.prev;

  
}

function tranPulse__tmp95bybylang_u141(pin_p0, width_p1) {
  var F = {procname: "tmp_bybylang.tranPulse", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
  framePtr = F;
    F.line = 47;
    F.filename = "tmp_bybylang.nim";
    rawEcho([91,84,82,65,78,45,80,85,76,83,69,93,32,112,105,110,32], HEX24__systemZdollars_u14(pin_p0), [32,119,105,100,116,104,32], width_p1);
  framePtr = F.prev;

  
}

function test__tmp95bybylang_u145() {
  var F = {procname: "tmp_bybylang.test", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "tmp_bybylang.nim";
    rawEcho([116,101,115,116,49,50,51,52]);
    F.line = 56;
    rawEcho([88,105,110,32,99,104,195,160,111]);
  framePtr = F.prev;

  
}

function testtest__tmp95bybylang_u144() {
  var F = {procname: "tmp_bybylang.testtest", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
  framePtr = F;
    F.line = 51;
    F.filename = "tmp_bybylang.nim";
    rawEcho([116,101,115,116,49,50,51,52]);
    F.line = 52;
    rawEcho([88,105,110,32,99,104,195,160,111]);
  framePtr = F.prev;

  
}
var F = {procname: "module tmp_bybylang", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
framePtr = F;
F.line = 3;
F.filename = "tmp_bybylang.nim";
var RAM_536870916 = [new Int32Array(1024)];
F.line = 4;
var BUS_536870921 = [[]];
F.line = 5;
var Pins_536870922 = [new Uint8Array(32)];
F.line = 58;
var mode_536871058 = [1];
F.line = 59;
apuTran__tmp95bybylang_u32([112,114,105,110,116], [104,101,108,108,111,32,119,111,114,108,100]);
F.line = 60;
apuMem__tmp95bybylang_u55([119,114,105,116,101], [82,65,77,48], [53]);
F.line = 61;
tranPulse__tmp95bybylang_u141(3, [50,110,115]);
F.line = 62;
rawEcho([72,101,108,108,111,32,119,111,114,108,100]);
F.line = 63;
rawEcho([116,101,115,116,49,50,51,52]);
F.line = 64;
rawEcho([88,105,110,32,99,104,195,160,111]);
F.line = 65;
test__tmp95bybylang_u145();
F.line = 66;
var otest_536871059 = [87716];
F.line = 67;
rawEcho(HEX24__systemZdollars_u14(otest_536871059[0]));
F.line = 68;
rawEcho([57,57,52,55]);
F.line = 69;
rawEcho([116,101,115,116,49,50,51,52]);
F.line = 70;
rawEcho([88,105,110,32,99,104,195,160,111]);
F.line = 71;
testtest__tmp95bybylang_u144();
F.line = 72;
rawEcho([50,50,50,50,50,50,49]);
F.line = 73;
rawEcho([57,48,48,48,49]);
F.line = 74;
rawEcho([53,56,53,57]);
F.line = 75;
rawEcho([57,48,48,56,54]);
F.line = 76;
rawEcho([57,49,49,49,49]);
F.line = 77;
rawEcho([49,49,49,49,49,48]);
F.line = 78;
rawEcho([57,57,57,57,57,57]);
F.line = 79;
rawEcho([51,48,48,48,48,48]);
F.line = 80;
rawEcho([50,50,50,50,50]);
F.line = 81;
rawEcho([51,48,53]);
Label1: {
  F.line = 82;
  var i_536871064 = [0];
  F.line = 96;
  F.filename = "iterators_1.nim";
  var res_536871099 = 1;
  Label2: {
    F.line = 97;
      Label3: while (true) {
      if (!(res_536871099 <= 5)) break Label3;
        F.line = 82;
        F.filename = "tmp_bybylang.nim";
        i_536871064[0] = res_536871099;
        F.line = 83;
        rawEcho([104,105]);
        F.line = 102;
        F.filename = "iterators_1.nim";
        res_536871099 = addInt(res_536871099, 1);
      }
  };
};
F.line = 84;
F.filename = "tmp_bybylang.nim";
var i_536871065 = [2];
if ((i_536871065[0] == 2)) {
F.line = 86;
apuTran__tmp95bybylang_u32([99,111,114,101], [109,105,100,115,116,101,112]);
}
else {
if ((i_536871065[0] == 3)) {
F.line = 88;
apuMem__tmp95bybylang_u55([119,114,105,116,101], [82,65,77,49], [57,57]);
}
else {
  F.line = 90;
rawEcho([111,116,104,101,114]);
}
}
framePtr = F.prev;
var F = {procname: "module tmp_bybylang", prev: framePtr, filename: "/Volumes/Data/Laptrinh/App/bybylangjit/tmp_bybylang.nim", line: 0};
framePtr = F;
framePtr = F.prev;
